from eth_utils import address
from web3 import Web3
import os
from solcx import compile_standard, compile_solc
from dotenv import load_dotenv
from decrypt import decrypt_aes128
import json
import subprocess
from datetime import datetime
import sys
from get_contract_addr import get_contract_addr

sys.path.append('../')
from w3080 import w3080

bytecode = "608060405234801561001057600080fd5b50611307806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806321de9d311461004657806365059e3514610076578063c215c78a146100a9575b600080fd5b610060600480360381019061005b9190610c5d565b6100c5565b60405161006d9190610f4c565b60405180910390f35b610090600480360381019061008b9190610d5d565b6103aa565b6040516100a09493929190610f6e565b60405180910390f35b6100c360048036038101906100be9190610c86565b610617565b005b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561039f57838290600052602060002090600402016040518060800160405290816000820180546101589061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546101849061118a565b80156101d15780601f106101a6576101008083540402835291602001916101d1565b820191906000526020600020905b8154815290600101906020018083116101b457829003601f168201915b505050505081526020016001820180546101ea9061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546102169061118a565b80156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b5050505050815260200160028201805461027c9061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546102a89061118a565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050815260200160038201805461030e9061118a565b80601f016020809104026020016040519081016040528092919081815260200182805461033a9061118a565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b50505050508152505081526020019060010190610125565b505050509050919050565b600060205281600052604060002081815481106103c657600080fd5b9060005260206000209060040201600091509150508060000180546103ea9061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546104169061118a565b80156104635780601f1061043857610100808354040283529160200191610463565b820191906000526020600020905b81548152906001019060200180831161044657829003601f168201915b5050505050908060010180546104789061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546104a49061118a565b80156104f15780601f106104c6576101008083540402835291602001916104f1565b820191906000526020600020905b8154815290600101906020018083116104d457829003601f168201915b5050505050908060020180546105069061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546105329061118a565b801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b5050505050908060030180546105949061118a565b80601f01602080910402602001604051908101604052809291908181526020018280546105c09061118a565b801561060d5780601f106105e25761010080835404028352916020019161060d565b820191906000526020600020905b8154815290600101906020018083116105f057829003601f168201915b5050505050905084565b848073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fcf565b60405180910390fd5b600a6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014156109555760005b6009811015610886576000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018261072791906110b6565b8154811061075e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600402016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106107e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020160008201816000019080546108049061118a565b61080f929190610a5b565b5060018201816001019080546108249061118a565b61082f929190610a5b565b5060028201816002019080546108449061118a565b61084f929190610a5b565b5060038201816003019080546108649061118a565b61086f929190610a5b565b50905050808061087e906111bc565b9150506106d3565b506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806108fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000209060040201600080820160006109209190610ae8565b6001820160006109309190610ae8565b6002820160006109409190610ae8565b6003820160006109509190610ae8565b505090555b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040528087815260200186815260200185815260200184815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190805190602001906109f9929190610b28565b506020820151816001019080519060200190610a16929190610b28565b506040820151816002019080519060200190610a33929190610b28565b506060820151816003019080519060200190610a50929190610b28565b505050505050505050565b828054610a679061118a565b90600052602060002090601f016020900481019282610a895760008555610ad7565b82601f10610a9a5780548555610ad7565b82800160010185558215610ad757600052602060002091601f016020900482015b82811115610ad6578254825591600101919060010190610abb565b5b509050610ae49190610bae565b5090565b508054610af49061118a565b6000825580601f10610b065750610b25565b601f016020900490600052602060002090810190610b249190610bae565b5b50565b828054610b349061118a565b90600052602060002090601f016020900481019282610b565760008555610b9d565b82601f10610b6f57805160ff1916838001178555610b9d565b82800160010185558215610b9d579182015b82811115610b9c578251825591602001919060010190610b81565b5b509050610baa9190610bae565b5090565b5b80821115610bc7576000816000905550600101610baf565b5090565b6000610bde610bd984611020565b610fef565b905082815260208101848484011115610bf657600080fd5b610c01848285611148565b509392505050565b600081359050610c18816112a3565b92915050565b600082601f830112610c2f57600080fd5b8135610c3f848260208601610bcb565b91505092915050565b600081359050610c57816112ba565b92915050565b600060208284031215610c6f57600080fd5b6000610c7d84828501610c09565b91505092915050565b600080600080600060a08688031215610c9e57600080fd5b6000610cac88828901610c09565b955050602086013567ffffffffffffffff811115610cc957600080fd5b610cd588828901610c1e565b945050604086013567ffffffffffffffff811115610cf257600080fd5b610cfe88828901610c1e565b935050606086013567ffffffffffffffff811115610d1b57600080fd5b610d2788828901610c1e565b925050608086013567ffffffffffffffff811115610d4457600080fd5b610d5088828901610c1e565b9150509295509295909350565b60008060408385031215610d7057600080fd5b6000610d7e85828601610c09565b9250506020610d8f85828601610c48565b9150509250929050565b6000610da58383610ed4565b905092915050565b6000610db882611060565b610dc28185611083565b935083602082028501610dd485611050565b8060005b85811015610e105784840389528151610df18582610d99565b9450610dfc83611076565b925060208a01995050600181019050610dd8565b50829750879550505050505092915050565b6000610e2d8261106b565b610e378185611094565b9350610e47818560208601611157565b610e5081611292565b840191505092915050565b6000610e668261106b565b610e7081856110a5565b9350610e80818560208601611157565b610e8981611292565b840191505092915050565b6000610ea16013836110a5565b91507f556e617574686f72697a656420616363657373000000000000000000000000006000830152602082019050919050565b60006080830160008301518482036000860152610ef18282610e22565b91505060208301518482036020860152610f0b8282610e22565b91505060408301518482036040860152610f258282610e22565b91505060608301518482036060860152610f3f8282610e22565b9150508091505092915050565b60006020820190508181036000830152610f668184610dad565b905092915050565b60006080820190508181036000830152610f888187610e5b565b90508181036020830152610f9c8186610e5b565b90508181036040830152610fb08185610e5b565b90508181036060830152610fc48184610e5b565b905095945050505050565b60006020820190508181036000830152610fe881610e94565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561101657611015611263565b5b8060405250919050565b600067ffffffffffffffff82111561103b5761103a611263565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110c18261113e565b91506110cc8361113e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561110157611100611205565b5b828201905092915050565b60006111178261111e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561117557808201518184015260208101905061115a565b83811115611184576000848401525b50505050565b600060028204905060018216806111a257607f821691505b602082108114156111b6576111b5611234565b5b50919050565b60006111c78261113e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111fa576111f9611205565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6112ac8161110c565b81146112b757600080fd5b50565b6112c38161113e565b81146112ce57600080fd5b5056fea2646970667358221220fe9ed1038746dd653e3c51303aa425ca95d8237a258e4b096a0fcdeaa0d4c5ed64736f6c63430008000033"

abi = [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "meter_address",
				"type": "address"
			}
		],
		"name": "get_meter_reading",
		"outputs": [
			{
				"components": [
					{
						"internalType": "string",
						"name": "timestamp",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "active_power",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "import_energy",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "export_energy",
						"type": "string"
					}
				],
				"internalType": "struct meter_data_storage.meter_reading[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "readings",
		"outputs": [
			{
				"internalType": "string",
				"name": "timestamp",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "active_power",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "import_energy",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "export_energy",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "meter_address",
				"type": "address"
			},
			{
				"internalType": "string",
				"name": "timestamp",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "active_power",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "import_energy",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "export_energy",
				"type": "string"
			}
		],
		"name": "store_meter_reading",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]

node_url = "http://192.168.0.152:22000"
chain_id = 10

account_addr, private_key, nonce, tx_receipt = get_contract_addr(bytecode, abi, node_url=node_url, chain_id=chain_id)

# print(tx_receipt.contractAddress)

# # ===================== Interact with the deployed contract =====================

w3 = Web3(Web3.HTTPProvider(node_url))
deployed_contract = w3.eth.contract(address=tx_receipt.contractAddress, abi=abi)
addr = w3.to_checksum_address(account_addr)
print(f"\nInitial value stored is: {deployed_contract.functions.get_meter_reading(addr).call()}")

def setting_transaction(nonce, chain_id, gas_price, private_key, data_dict, node_url="http://192.168.0.152:22000"):
    """
    This function is used to call the solidity functions which perform some calculations
    (unlike the functions which only have return statement in them)
    like setter function, adding function etc

    nonce: nonce of previous transaction, this function will update it automatically
    chain_id: chain id on which node is running
    gas_price: gas price
    private_key: private_key returned by decrypt_aes128 function

    returns nonce and transaction receipt if successful transaction happened.
    """

    timestamp     = data_dict["timestamp"]
    active_power  = data_dict["active_power"]
    import_energy = data_dict["import_energy"]
    export_energy = data_dict["export_energy"]

    # nonce is increamented by 1 for every attemp made (https://www.investopedia.com/terms/n/nonce.asp#:~:text=A%20nonce%20is%20a%20numerical%20value%20used%20in,values%20in%20the%20block%20consumes%20significant%20computational%20power.)
    nonce = nonce + 1


    new_transaction = deployed_contract.functions.store_meter_reading(addr, timestamp, active_power, import_energy, export_energy).build_transaction(
        {
            "chainId": chain_id,
            "gasPrice": gas_price,
            "from": addr,
            "nonce": nonce,
        }
    )

    try:
        signed_new_txn = w3.eth.account.sign_transaction(
            new_transaction, private_key=private_key
        )
        tx_new_hash = w3.eth.send_raw_transaction(signed_new_txn.rawTransaction)
        print("\nSending new transaction...\n")
        tx_new_receipt = w3.eth.wait_for_transaction_receipt(tx_new_hash)

        return nonce, tx_new_receipt
    except Exception as e:
        print(f"{e}")
        exit(1)

energy_meter_url = "http://192.168.0.107/monitorjson"

import time

while True:
    w3080_data = w3080(energy_meter_url)['Data']
    data_dict = {
        "timestamp"    : str(datetime.now()),
        "active_power" : str(w3080_data[2]),   # W
        "import_energy": str(w3080_data[3]),   # kWh
        "export_energy": str(w3080_data[4])    # kWh
    }

    w3 = Web3(Web3.HTTPProvider(node_url))
    nonce, tx_receipt = setting_transaction(nonce, chain_id, w3.eth.gas_price, private_key, data_dict)
    # print(f"\nWe have updated the value. New value is: {deployed_contract.functions.get_meter_reading(addr).call()}")
    time.sleep(1)
